version: '3.8'

services:
  task_service:
    build:
      context: .
      dockerfile: task_service/Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: >
      sh -c "uvicorn app:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./task_service/src:/app/src

  bots_service:
    build:
      context: .
      dockerfile: bots/Dockerfile
    env_file:
      - .env
    environment:
      - AUTO_RELOAD=true
    command: >
      sh -c "python main.py"
    volumes:
      - ./bots/src:/app/src

  database:
    image: postgres:14.6-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env

  # elasticsearch:
  #   image: elasticsearch:8.16.2
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data


  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  flower:
    image: mher/flower:1.2.0
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - worker

  worker:
    build:  
      context: .
      dockerfile: task_service/Dockerfile
    env_file:
      - .env
    command: celery -A celery_app worker --loglevel=info --concurrency=${CELERY_WORKERS}
    volumes:
      - ./task_service/src:/app/src
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - redis

volumes:
  db_data:
  rabbitmq_data:
  redis_data:
  esdata:
