"""deleted subtasks

Revision ID: 88afde0e1f24
Revises: e61872311a99
Create Date: 2025-06-18 10:01:23.508212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '88afde0e1f24'
down_revision: Union[str, None] = 'e61872311a99'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subtasks')
    op.create_unique_constraint(op.f('uq_groups_id'), 'groups', ['id'])
    op.create_unique_constraint(op.f('uq_tasks_id'), 'tasks', ['id'])
    op.create_unique_constraint(op.f('uq_users_id'), 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_users_id'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_tasks_id'), 'tasks', type_='unique')
    op.drop_constraint(op.f('uq_groups_id'), 'groups', type_='unique')
    op.create_table('subtasks',
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('creation_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('deadline', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('pass_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('done', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_subtasks_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subtasks'))
    )
    # ### end Alembic commands ###
